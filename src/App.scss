// import google font
@import url('https://fonts.googleapis.com/css2?family=Pacifico&family=Playfair+Display:ital@1&display=swap" rel="stylesheet');

// define sass variables
$colorDark: #131212;

$colorRed: #b5a19480;
$colorWhite: #ffffff0f;
$backgroundColor: #e4beaf95;

$thin: 2px;

$spaceXS: 4px;
$spaceS: 8px;

$spaceM: 24px;
$spaceL: 48px;

// set global styles
body {
  box-sizing: border-box;
  margin: 0;
  font-family: 'Josefin Sans', 'Trebuchet MS', 'Helvetica', sans-serif;
  color: $colorDark;
  background-image: url('./weddingflowers.jpg');
  background-size: cover;
  background-attachment: fixed;
}

// define mixins here:
@mixin flexCol($align: center) {
  display: flex;
  flex-direction: column;
  align-items: $align;
}

// center everything
.display {
  @include flexCol();
  font-size: 1.2rem;
  margin: $spaceM;
  h1 {
    font-family: italic;
    color: #af7838;
    background-color: $backgroundColor;
    backdrop-filter: blur($spaceXS);
    padding: $spaceS;
    border-radius: $spaceS;

  }
  .credit {
    font-size: 0.6rem;
    writing-mode: vertical-rl;
    position: fixed;
    top: 65%;
    left: 95%;
    @media screen and (max-width: 700px) {
      position: inherit;
      writing-mode: horizontal-tb;
      margin-top: 20px;
    }
  }
}

// define how the content displays
.content {
  @include flexCol(stretch);
  border-radius: $spaceS;
  box-shadow: 0 0 $spaceM $backgroundColor;
  background-color: $backgroundColor;
  backdrop-filter: blur($spaceXS);
  max-width: 768px;
  width: 70vw;
  @media screen and (max-width: 700px) {
    width: 95vw;
  }
  button {
    cursor: pointer;
    border-radius: $spaceXS;
    margin: $spaceS;
    padding: $spaceS;
    font-family: 'Josefin Sans', 'Trebuchet MS', 'Helvetica', sans-serif;
    box-shadow: 0 0 $thin $colorWhite;
    background-color: transparent;
    border: $thin solid $backgroundColor;
    &:hover {
      border: 1px solid $backgroundColor;
      background-color: $colorWhite;
    }
  }
}

.list {
  margin: $spaceM;
  margin-bottom: 1rem;
  border-block: solid;
  border-color: rgb(180, 103, 103);
}

// define the the styles for each individual guest line
.guest {
  display: grid;
  grid-template-columns: 2fr 2fr 1fr;
  border-radius: $spaceS;
  margin: $spaceS;
  padding: 0 $spaceS;
  background-color: $colorWhite;
  backdrop-filter: opacity(0.2);
  @media screen and (max-width: 400px) {
    grid-template-columns: 1fr;
  }
  p {
    display: inline-flex;
    font-size: 1.5rem;
    align-items: center;
    // padding: $spaceS 0;
  }
  .guestName {
    font-variant: small-caps;
    font-weight: 500;


  }
  .editNames {
    max-width: min-content;
    box-shadow: none;
    border: none;
    color: $colorDark;
    opacity: 0.4;
    margin: 0;
    margin-right: $spaceS;
    padding: 0;
    transform: rotate(90deg) translate(-15px, -3px);
    &:hover {
      border: solid;
    }
  }
  .status {
    display: flex;
    align-items: center;
  }
  button {
    width: min-content;
    height: min-content;
    align-self: center;
    justify-self: flex-end;
    color: $colorDark;
  }
}

// filter buttons
.filters {
  display: flex;
  justify-content: flex-end;
  margin: $spaceM;
  margin-top: 0;
  .active {
    background-color: $colorWhite;
    border: $thin solid transparent;
  }
}

.addGuest {
  display: flex;
  justify-content: center;
  font-size: $spaceM;
}

// input fields
.inputs {
  @include flexCol(flex-start);
  margin: $spaceS;
  label {
    margin: $spaceS;
  }
  input {
    margin-left: $spaceS;
    background-color: transparent;
  }
}

// make error visible
.error {
  border: $spaceXS solid $colorRed;
  border-radius: $spaceXS;
  p {
    padding: $spaceXS;
    font-size: 1rem;
    color: red;
  }
}

//  addGuest button
.buttons {
  margin: $spaceS;

  .add {
    margin: $spaceS;
    padding: $spaceM;
    font-size: 1.5rem;
    color: $colorDark;
  }
}

// deleteAll button
.deleteAll {
  display: flex;
  margin: $spaceM;
  margin-top: $spaceL;
  justify-content: flex-end;
  .delete {
    height: min-content;
    width: min-content;
    white-space: nowrap;
    &:hover {
      background-color: $colorRed;
      border: $thin solid $colorWhite;
    }
  }
}
